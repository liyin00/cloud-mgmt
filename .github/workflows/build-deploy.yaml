# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
      # - staging 

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: clae    # Add your cluster name here.
  GKE_ZONE: asia-southeast1   # Add your cluster zone here.

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    # environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
  

    # Build the Docker images
    - name: Build
      # env: 
      #   PASSWORD: ${{secrets.GKE_SQL_USER_PW}}
      #   PUBLIC_IP_ADDRESS: ${{secrets.CLOUD_SQL_IP}}
      #   DBNAME: ${{secrets.GKE_SQL_NAME}}
      #   PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      #   INSTANCE_NAME: ${{secrets.CLOUD_SQL_INSTANCE_NAME}}
        # SA_KEY: ${{secrets.GKE_SA_KEY}}
      run: |-
        touch /users_service/.env
        echo PASSWORD=${{ secrets.GKE_SQL_USER_PW }} >> /users_service/.env
        echo PUBLIC_IP_ADDRESS=${{secrets.CLOUD_SQL_IP}} >> /users_service/.env
        echo DBNAME=${{secrets.GKE_SQL_NAME}} >> /users_service/.env
        echo PROJECT_ID=${{ secrets.GKE_PROJECT }} >> /users_service/.env
        echo INSTANCE_NAME=${{secrets.CLOUD_SQL_INSTANCE_NAME}} >> /users_service/.env
        cat /users_service/.env
        docker-compose -f ./docker-compose.yml build 

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v1

    # # Build Docker Image with Buildx
    # - name: Build 
    #   uses: docker/docker/bake-action@master
    #   with: 
    #     files: ./docker-compose.yml
    #     push: true 
    #     secrets: |
    #       "PASSWORD: ${{secrets.GKE_SQL_USER_PW}}"
    #       "PUBLIC_IP_ADDRESS: ${{secrets.CLOUD_SQL_IP}}"
    #       "DBNAME: ${{secrets.GKE_SQL_NAME}}"
    #       "PROJECT_ID: ${{ secrets.GKE_PROJECT }}"
    #       "INSTANCE_NAME: ${{secrets.CLOUD_SQL_INSTANCE_NAME}}"          

    # Push the Docker images to Google Container Registry
    - name: Publish
      run: |-
        gcloud docker -- push gcr.io/$PROJECT_ID/useless:v1
        gcloud docker -- push gcr.io/$PROJECT_ID/users:v1
        
    # Deploy the Docker images to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f ./gke_config/useless.yaml -f ./gke_config/useless-service.yaml -f ./gke_config/users.yaml -f ./gke_config/users-service.yaml
        kubectl rollout status deployment/useless
        kubectl rollout status deployment/users
        kubectl get services -o wide