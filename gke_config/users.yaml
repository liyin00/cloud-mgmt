apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  labels:
    app: users

spec:
  replicas: 1
  strategy: 
    type: RollingUpdate 
    rollingUpdate: 
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: users

  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
      
      #   - name: users 
      #     image: "gcr.io/elegant-fort-344208/users:v1"
      #     imagePullPolicy: Always
      #     ports:
      #     - containerPort: 5003
      #       name: users          
      # restartPolicy: Always

        - name: users
          image: "gcr.io/elegant-fort-344208/users:v1"
          imagePullPolicy: Always
 
          env:
          - name: USERNAME
            valueFrom:
              secretKeyRef:
                name: clae-cicd
                key: username
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: L0llip0p0!
                key: password
          - name: DBNAME
            valueFrom:
              secretKeyRef:
                name: clae_cloud_sql
                key: database
  
          ports:
          - containerPort: 5003
            name: users  
          restartPolicy: Always
        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloudsql-docker/gce-proxy:1.28.0 # make sure the use the latest version
          command:
            - "/cloud_sql_proxy"

            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "-ip_address_types=PRIVATE"

            # Replace DB_PORT with the port the proxy should listen on
            # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
            - "-instances=127.0.0.1=tcp:3306"

          # [START cloud_sql_proxy_k8s_volume_mount]
            # This flag specifies where the service account key can be found
            - "-credential_file=/secrets/service_acc.json"
          securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          volumeMounts:
          - name: <YOUR-SA-SECRET-VOLUME>
            mountPath: /secrets/
            readOnly: true
            # [END cloud_sql_proxy_k8s_volume_mount]
          # Resource configuration depends on an application's requirements. You
          # should adjust the following values based on what your application
          # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
              memory: "2Gi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
              cpu:    "1"
        # [START cloud_sql_proxy_k8s_volume_secret]
        volumes:
        - name: ksa-volume
          secret:
            secretName: sasecret
        # [END cloud_sql_proxy_k8s_volume_secret]